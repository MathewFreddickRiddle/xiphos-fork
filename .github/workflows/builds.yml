name: builds

on:
  push: {}
  pull_request: {}

jobs:
  build_windows:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version:
          - "-win32"
          - "-win64"
    steps:
      - name: checkout Xiphos
        uses: actions/checkout@v2
        with:
          path: xiphos
          fetch-depth: 0
      - name: fetch history
        run: |
          cd xiphos && git fetch origin +refs/tags/*:refs/tags/*
      - name: checkout Biblesync
        uses: actions/checkout@v2
        with:
          repository: karlkleinpaste/biblesync.git
          path: biblesync
      - name: build windows targets
        shell: bash
        id: build
        run: |
          set -ex -o pipefail
          docker run -i --rm -v "$(pwd):/source" fedora:30 /source/xiphos/win32/xc-xiphos-win.sh ${{ matrix.version }} -b=/source/biblesync
          echo "::set-output name=artifact::$(ls xiphos/*.exe)"
      - name: upload artifact
        uses: actions/upload-artifact@master
        with:
          name: packages
          path: ${{ steps.build.outputs.artifact }}

  build_linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distro:
          - archlinux:latest
          - fedora:latest
          - debian:latest
          - ubuntu:latest
    steps:
      - name: checkout xiphos
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: fetch tags
        run: git fetch --tags
      - name: install python
        uses: actions/setup-python@v1
      - name: install python packages
        run: |
          set -ex
          python -m pip install -U pip
          pip install -U PyGithub setuptools PyYAML
      - name: execute build
        id: build
        run: |
          set -ex
          curl -Ls -o docker-build https://github.com/mate-desktop/mate-dev-scripts/raw/master/travis/docker-build
          chmod +x docker-build
          python docker-build --name ${{ matrix.distro }} --config .ci-build.yml --install
          python docker-build --name ${{ matrix.distro }} -vvvv --config .ci-build.yml --build scripts
        env:
          TEMP: ${{ runner.temp }}
      - name: upload source artifact
        uses: actions/upload-artifact@master
        if: steps.build.outputs.artifact
        with:
          name: packages
          path: ${{ steps.build.outputs.artifact }}

  deploy:
    needs:
      - build_windows
      - build_linux
    if: contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: packages
      - name: prepare for release
        id: release
        run: |
          set -ex
          cd packages
          gunzip -k *.tar.gz
          xz *.tar
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - name: create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: packages/*
          allowUpdates: true
          name: Release ${{ steps.release.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
